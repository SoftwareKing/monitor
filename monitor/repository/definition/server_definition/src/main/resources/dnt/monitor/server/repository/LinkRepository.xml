<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dnt.monitor.server.repository.LinkRepository">

    <!--对外接口映射-->
    <select id="findAll" resultMap="linkResult">
        <include refid="selectLinks"/>
        <where>from_id = #{resourceId} or to_id = #{resourceId}</where>
    </select>

    <select id="findAllByFromAndTo" resultMap="linkResult">
        <include refid="selectLinks"/>
        <where>from_id = #{fromId} and to_id = #{toId}</where>
    </select>

    <select id="findAllByFrom" resultMap="linkResult">
        <include refid="selectLinks"/>
        <where>from_id = #{fromId} </where>
    </select>

    <select id="findAllByTo" resultMap="linkResult">
        <include refid="selectLinks"/>
        <where>to_id = #{toId}</where>
    </select>

    <select id="find" resultMap="fullLinkResult">
        <include refid="selectLink"/>
        <where>
            (l.from_id = #{fromId}) AND
            (l.to_id = #{toId}) AND
            (l.type = #{type})
        </where>
    </select>

    <insert id="create" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        <include refid="insertLink"/>
    </insert>

    <delete id="deleteById">
        DELETE FROM links
        <where>id = #{id}</where>
    </delete>

    <!--内部实现SQL片段: 许多片段将会被其他类直接复用-->

    <sql id="selectLinks">
        SELECT * FROM links
    </sql>

    <sql id="selectLink">
        SELECT l.*, 
        f.id                 AS from_id,
        f.type               AS from_type,
        f.label              AS from_label,
        f.address            AS from_address,
        f.performance        AS from_performance,
        f.config_status      AS from_config_status,
        f.availability       AS from_availability,
        f.properties         AS from_properties,
        f.created_at         AS from_created_at,
        t.id                 AS to_id,
        t.type               AS to_type,
        t.label              AS to_label,
        t.address            AS to_address,
        t.performance        AS to_performance,
        t.config_status      AS to_config_status,
        t.availability       AS to_availability,
        t.properties         AS to_properties,
        t.created_at         AS to_created_at
        FROM links l
        JOIN resources f ON l.from_id = f.id
        JOIN resources t ON l.to_id = t.id
    </sql>

    <sql id="insertLink">
        INSERT INTO links(from_id, to_id, type, label, performance, config_status, availability,
                               properties, created_at, updated_at)
        VALUES (#{fromId}, #{toId}, #{type}, #{label}, #{performance}, #{configStatus}, #{availability},
                #{properties, typeHandler=net.happyonroad.util.JsonHandler}, #{createdAt}, #{updatedAt});
    </sql>

    <!--映射结果-->

    <resultMap id="linkResult" type="Link" autoMapping="true">
        <id property="id" column="id"/>
        <result property="fromId" column="from_id"/>
        <result property="toId" column="to_id"/>
        <result property="properties" column="properties"
                typeHandler="net.happyonroad.util.PropertiesHandler"/>
    </resultMap>

    <resultMap id="fullLinkResult" type="Link" autoMapping="true">
        <id property="id" column="id"/>
        <result property="fromId" column="from_id"/>
        <result property="toId" column="to_id"/>
        <result property="properties" column="properties"
                typeHandler="net.happyonroad.util.PropertiesHandler"/>
        <association property="from" columnPrefix="from_" 
                     resultMap="dnt.monitor.server.repository.ResourceRepository.resourceResult"/>
        <association property="to" columnPrefix="to_" 
                     resultMap="dnt.monitor.server.repository.ResourceRepository.resourceResult"/>
    </resultMap>


</mapper>
