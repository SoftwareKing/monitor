<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dnt.monitor.server.repository.DeviceRepository">
    <!--对外接口映射: override ResourceRepository-->

    <select id="findWithAddress" resultMap="fullDeviceResult">
        <include refid="selectDevice"/>
        <include refid="judgeWithAddress"/>
        LIMIT 1
    </select>

    <select id="findAllInAddresses" resultMap="deviceResult">
        <include refid="selectDevices"/>
        <include refid="judgeInAddresses"/>
    </select>

    <select id="countByKeyword" resultType="Long">
        <include refid="countDevices"/>
        <include refid="judgeByKeyword"/>
    </select>

    <select id="findAllByKeyword" resultMap="deviceResult">
        <include refid="selectDevices"/>
        <include refid="judgeByKeyword"/>
        <include refid="dnt.monitor.server.repository.ResourceRepository.paginate"/>
    </select>

    <select id="findById" resultMap="fullDeviceResult">
        <include refid="selectDevice"/>
        <where>d.id = #{id}</where>
    </select>

    <select id="findByAddress" resultMap="fullDeviceResult">
        <include refid="selectDevice"/>
        <where>d.address = #{address}</where>
    </select>

    <select id="findByLabel" resultMap="fullDeviceResult">
        <include refid="selectDevice"/>
        <where>d.label = #{label}</where>
        LIMIT 1
    </select>

    <insert id="create">
        BEGIN;
        <include refid="dnt.monitor.server.repository.ResourceRepository.insertResource"/>
        <selectKey keyProperty="id" keyColumn="id" order="AFTER" resultType="long" statementType="PREPARED">
            <include refid="dnt.monitor.server.repository.ResourceRepository.selectKey"/>
        </selectKey>
        <include refid="insertDevice"/>
        COMMIT;
    </insert>

    <insert id="createNIC" useGeneratedKeys="true" keyProperty="id">
        BEGIN;
        <include refid="dnt.monitor.server.repository.ResourceRepository.insertComponent"/>
        <selectKey keyProperty="id" keyColumn="id" order="AFTER" resultType="long" statementType="PREPARED">
            <include refid="dnt.monitor.server.repository.ResourceRepository.selectKey"/>
        </selectKey>
        <include refid="insertNIC"/>
        COMMIT;
    </insert>

    <update id="updateNIC">
        BEGIN;
        <include refid="dnt.monitor.server.repository.ResourceRepository.updatingComponentById"/>;
        <include refid="updatingNIC"/>
        <include refid="judgeByTid"/>;
        COMMIT;
    </update>

    <delete id="deleteNIC">
        BEGIN;
        <include refid="deletingNIC"/>
        <include refid="judgeByTid"/>;
        <include refid="dnt.monitor.server.repository.ResourceRepository.deletingComponentById"/>;
        COMMIT;
    </delete>

    <insert id="createService" useGeneratedKeys="true" keyProperty="id">
        BEGIN;
        <include refid="dnt.monitor.server.repository.ResourceRepository.insertComponent"/>
        <selectKey keyProperty="id" keyColumn="id" order="AFTER" resultType="long" statementType="PREPARED">
            <include refid="dnt.monitor.server.repository.ResourceRepository.selectKey"/>
        </selectKey>
        <include refid="insertService"/>
        COMMIT;
    </insert>

    <insert id="createPartialDevice">
        <include refid="insertPartialDevice"/>
    </insert>

    <update id="update" keyProperty="id">
        BEGIN;
        <include refid="dnt.monitor.server.repository.ResourceRepository.updatingResourceById"/>;
        <include refid="dnt.monitor.server.repository.DeviceRepository.updatingDevice"/>
        <include refid="dnt.monitor.server.repository.DeviceRepository.judgeByTid"/>;
        COMMIT;
    </update>


    <!--内部映射-->
    <select id="findNICs" resultMap="nicResult">
        <include refid="selectNICs"/>
        <include refid="dnt.monitor.server.repository.ResourceRepository.judgeByResourceId"/>
    </select>

    <select id="findServices" resultMap="serviceResult">
        <include refid="selectServices"/>
        <include refid="dnt.monitor.server.repository.ResourceRepository.judgeByResourceId"/>
    </select>

    <!--内部实现SQL片段-->
    <sql id="selectDevice">
        SELECT d.*
        FROM devices d
    </sql>

    <sql id="selectDevices">
        <include refid="selectDevice"/>
    </sql>

    <sql id="countDevices">
        SELECT COUNT(0) FROM devices d
    </sql>

    <sql id="judgeByKeyword">
        <where>
            <if test="keyword != null and keyword != ''">
                <bind name="pattern" value="'%' + keyword + '%' "/>
                d.label LIKE #{pattern} OR
                d.address LIKE #{pattern} OR
                d.description LIKE #{pattern} OR
                d.contact LIKE #{pattern} OR
                d.location LIKE #{pattern}
            </if>
        </where>
    </sql>

    <sql id="judgeWithAddress">
        <where>d.address = #{address} OR LOCATE(#{address}, d.addresses) > 0 </where>
    </sql>

    <sql id="judgeInAddresses">
        <where>(d.id != #{exceptId}) AND
            (d.address in
            <foreach item="item" index="index" collection="addresses" open="(" separator="," close=")">
              #{item}
            </foreach>
            )
        </where>
    </sql>

    <sql id="selectNICs">
        SELECT * FROM nics
    </sql>
    <sql id="selectServices">
        SELECT * FROM services
    </sql>

    <sql id="insertDevice">
        INSERT INTO t_devices (tid, description, object_id, up_time, contact, location,
                               addresses, arp_entries, route_entries, tcp_entries, udp_entries )
        VALUES (LAST_INSERT_ID(), #{description}, #{objectID}, #{upTime}, #{contact},#{location},
                #{addresses, typeHandler=dnt.monitor.server.util.AddressEntriesHandler},
                #{arpEntries, typeHandler=dnt.monitor.server.util.ARPEntriesHandler},
                #{routeEntries, typeHandler=dnt.monitor.server.util.RouteEntriesHandler},
                #{tcpEntries, typeHandler=dnt.monitor.server.util.TcpEntriesHandler},
                #{udpEntries, typeHandler=dnt.monitor.server.util.UdpEntriesHandler} );
    </sql>

    <sql id="insertPartialDevice">
        INSERT INTO t_devices (tid, description, object_id, up_time, contact, location,
                               addresses, arp_entries, route_entries, tcp_entries, udp_entries )
        VALUES (#{id}, #{description}, #{objectID}, #{upTime}, #{contact},#{location},
                #{addresses, typeHandler=dnt.monitor.server.util.AddressEntriesHandler},
                #{arpEntries, typeHandler=dnt.monitor.server.util.ARPEntriesHandler},
                #{routeEntries, typeHandler=dnt.monitor.server.util.RouteEntriesHandler},
                #{tcpEntries, typeHandler=dnt.monitor.server.util.TcpEntriesHandler},
                #{udpEntries, typeHandler=dnt.monitor.server.util.UdpEntriesHandler} );
    </sql>

    <sql id="insertNIC">
        INSERT INTO t_nics (tid, `index`, if_type,address, speed, mtu, `usage`, queue_length,
                            rx, tx, rtx, trx, ttx, trtx, in_pkts, in_errs, out_pkts, out_errs, collisions)
          VALUES(LAST_INSERT_ID(),#{index}, #{ifType},  #{address}, #{speed}, #{mtu}, #{usage}, #{queueLength},
                 #{rx}, #{tx}, #{rtx}, #{trx}, #{ttx}, #{trtx}, #{inPkts}, #{inErrs}, #{outPkts}, #{outErrs}, #{collisions});
    </sql>

    <sql id="updatingNIC">
        UPDATE t_nics
        <set>
            `index`      = #{index},
            if_type      = #{ifType},
            address      = #{address},
            speed        = #{speed},
            mtu          = #{mtu},
            `usage`      = #{usage} ,
            queue_length = #{queueLength},
            rx           = #{rx},
            tx           = #{tx},
            rtx          = #{rtx},
            trx          = #{trx},
            ttx          = #{ttx},
            trtx         = #{trtx},
            in_pkts      = #{inPkts},
            in_errs      = #{inErrs},
            out_pkts     = #{outPkts},
            out_errs     = #{outErrs},
            collisions   = #{collisions}
        </set>
    </sql>

    <sql id="deletingNIC">
        DELETE FROM t_nics
    </sql>

    <sql id="insertService">
        INSERT INTO t_services (tid, `port`)
          VALUES(LAST_INSERT_ID(),#{port});
    </sql>

    <sql id="updatingDevice">
        UPDATE t_devices
        <set>
            description = #{description},
            object_id = #{objectID},
            up_time = #{upTime},
            contact = #{contact},
            addresses = #{addresses, typeHandler=dnt.monitor.server.util.AddressEntriesHandler},
            arp_entries = #{arpEntries, typeHandler=dnt.monitor.server.util.ARPEntriesHandler},
            route_entries = #{routeEntries, typeHandler=dnt.monitor.server.util.RouteEntriesHandler},
            tcp_entries = #{tcpEntries, typeHandler=dnt.monitor.server.util.TcpEntriesHandler},
            udp_entries = #{udpEntries, typeHandler=dnt.monitor.server.util.UdpEntriesHandler}
        </set>
    </sql>

    <sql id="judgeByTid">
        <where>tid = #{id}</where>
    </sql>

    <!--结果映射-->

    <resultMap id="deviceResult" type="Device" autoMapping="true"
               extends="dnt.monitor.server.repository.ResourceRepository.resourceResult">
        <result property="addresses" column="addresses" typeHandler="dnt.monitor.server.util.AddressEntriesHandler"/>
        <result property="arpEntries" column="arp_entries" typeHandler="dnt.monitor.server.util.ARPEntriesHandler"/>
        <result property="routeEntries" column="route_entries" typeHandler="dnt.monitor.server.util.RouteEntriesHandler"/>
        <result property="tcpEntries" column="tcp_entries" typeHandler="dnt.monitor.server.util.TcpEntriesHandler"/>
        <result property="udpEntries" column="udp_entries" typeHandler="dnt.monitor.server.util.UdpEntriesHandler"/>
   </resultMap>

    <!--由于该Result Map会被HostRepository引用，其内部的select采用FQN-->
    <resultMap id="fullDeviceResult" type="Device" autoMapping="true"
               extends="dnt.monitor.server.repository.ResourceRepository.fullResourceResult">
        <result property="addresses" column="addresses" typeHandler="dnt.monitor.server.util.AddressEntriesHandler"/>
        <result property="arpEntries" column="arp_entries" typeHandler="dnt.monitor.server.util.ARPEntriesHandler"/>
        <result property="routeEntries" column="route_entries" typeHandler="dnt.monitor.server.util.RouteEntriesHandler"/>
        <result property="tcpEntries" column="tcp_entries" typeHandler="dnt.monitor.server.util.TcpEntriesHandler"/>
        <result property="udpEntries" column="udp_entries" typeHandler="dnt.monitor.server.util.UdpEntriesHandler"/>
        <collection property="interfaces" column="id" select="dnt.monitor.server.repository.DeviceRepository.findNICs"/>
        <collection property="services" column="id" select="dnt.monitor.server.repository.DeviceRepository.findServices"/>
    </resultMap>

    <resultMap id="nicResult" type="NIC" autoMapping="true"
               extends="dnt.monitor.server.repository.ResourceRepository.componentResult"/>
    <resultMap id="serviceResult" type="Service" autoMapping="true"
               extends="dnt.monitor.server.repository.ResourceRepository.componentResult"/>
</mapper>
